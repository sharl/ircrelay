#!/usr/bin/perl
# -*- Mode: perl -*-

use strict;
use warnings;
use File::Basename qw(basename);
use Config::Tiny;
use Getopt::Long;
use Net::IRC;

# Use no Carp messages.
$SIG{__WARN__} = sub {};

my $prog = basename($0);
my $conf = "$ENV{HOME}/.$prog";
my $privmsg;
goto usage unless GetOptions('privmsg' => \$privmsg,
			     'file=s'  => \$conf    );
my $ini  = Config::Tiny->read($conf);

my $SERVER = $ini->{_}->{server} || 'localhost';
my $PORT   = $ini->{_}->{port}   || 6667;
my $PASS   = $ini->{_}->{pass};
my $NICK   = $ini->{_}->{nick};

if (! @ARGV) {
  usage: print STDERR "usage: $prog [-p] [-f conf] <channel> [message]\n";
    exit 1;
}
if (! $NICK) {
    print STDERR "Please make sure \033[1mnick\033[m is set in \033[1m$conf\033[m\n";
    exit 1;
}

my ($channel, $message) = @ARGV;
my @messages;
if (! $message) {
    @messages = map {chomp; $_} <STDIN>;
}

my $irc = new Net::IRC;
my $conn = $irc->newconn(
    Server => $SERVER,
    Port => $PORT,
    Password => $PASS,
    Nick => $NICK
    ); 	
sub on_connect {
    my $self = shift;

    $self->join($channel);
    if (@messages) {
	foreach (@messages) {
	    $privmsg ? $self->privmsg($channel, $_) : $self->notice($channel, $_);
	    sleep(1); # avoid flood
	}
    } else {
	$privmsg ? $self->privmsg($channel, $message) : $self->notice($channel, $message);
    }
    exit;
}
$conn->add_handler('endofmotd', \&on_connect);
$irc->start;
