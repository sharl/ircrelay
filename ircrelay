#!/usr/bin/perl
# -*- Mode: perl -*-

use strict;
use warnings;
use File::Basename qw(basename);
use Config::Tiny;
use Getopt::Long;
use POE qw(Component::IRC);

my $prog = basename($0);

sub usage {
    print STDERR "usage: $prog [-a] [-p] [-f conf] [-k password] <channel> [message]\n";
    exit 1;
}

my $conf = "$ENV{HOME}/.$prog";
my ($action, $privmsg, $chpass);
&usage unless GetOptions('action'  => \$action,
			 'privmsg' => \$privmsg,
			 'file=s'  => \$conf,
			 'key=s'   => \$chpass  );
undef $privmsg if ($action);
my $ini = Config::Tiny->read($conf);

my $SERVER  = $ini->{_}->{server} || 'localhost';
my $PORT    = $ini->{_}->{port}   || 6667;
my $USE_SSL = $ini->{_}->{ssl};
my $PASS    = $ini->{_}->{pass};
my $NICK    = $ini->{_}->{nick};

&usage unless @ARGV;
if (! $NICK) {
    print STDERR "Please make sure \033[1mnick\033[m is set in \033[1m$conf\033[m\n";
    exit 1;
}

my ($channel, @message) = @ARGV;
&usage unless $channel;
my $message = join(' ', @message);
my @messages;
if (! $message) {
    @messages = map {chomp; $_} <STDIN>;
}
exit if (! $message && ! @messages);

my $irc = POE::Component::IRC->spawn(
    Server   => $SERVER,
    Port     => $PORT,
    UseSSL   => $USE_SSL,
    Password => $PASS,
    Nick     => $NICK,
    Ircname  => $NICK,
    ) or die $!;

POE::Session->create(
    package_states => [
	main => [ qw(_start irc_001 irc_ping) ],
    ],
    heap => { irc => $irc },
    );

sub _start {
    my $heap = $_[HEAP];
    my $irc = $heap->{irc};

    $irc->yield(register => 'all');
    $irc->yield(connect => {});
}

sub irc_001 {
    my ($kernel, $sender) = @_[KERNEL, SENDER];

    if ($chpass) {
	$kernel->post($sender => join => $channel => $chpass);
    } else {
	$kernel->post($sender => join => $channel);
    }

    if (@messages) {
	foreach (@messages) {
	    next unless $_;
	    $privmsg ? $kernel->post($sender => privmsg => $channel => $_)
		: $action ? $kernel->post($sender => ctcp => $channel => "ACTION $_")
		: $kernel->post($sender => notice => $channel => $_);
	    sleep(1); # avoid flood
	}
    } else {
	$privmsg ? $kernel->post($sender => privmsg => $channel => $message)
	    : $action ? $kernel->post($sender => ctcp => $channel => "ACTION $message")
	    : $kernel->post($sender => notice => $channel => $message);
    }
}

sub irc_ping {
    $poe_kernel->signal($poe_kernel, 'POCOIRC_SHUTDOWN');
}

$poe_kernel->run();
