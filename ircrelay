#!/usr/bin/perl
# -*- Mode: perl -*-

use strict;
use warnings;
use File::Basename qw(basename);
use Config::Tiny;
use Getopt::Long;
use Net::IRC;

# Use no Carp messages.
$SIG{__WARN__} = sub {};

my $prog = basename($0);
my $conf = "$ENV{HOME}/.$prog";
my ($action, $privmsg, $chpass);
goto usage unless GetOptions('action'  => \$action,
			     'privmsg' => \$privmsg,
			     'file=s'  => \$conf,
			     'key=s'   => \$chpass  );
undef $privmsg if ($action);
my $ini  = Config::Tiny->read($conf);

my $SERVER  = $ini->{_}->{server} || 'localhost';
my $PORT    = $ini->{_}->{port}   || 6667;
my $USE_SSL = $ini->{_}->{ssl};
my $PASS    = $ini->{_}->{pass};
my $NICK    = $ini->{_}->{nick};

if (! @ARGV) {
  usage: print STDERR "usage: $prog [-a] [-p] [-f conf] [-k password] <channel> [message]\n";
    exit 1;
}
if (! $NICK) {
    print STDERR "Please make sure \033[1mnick\033[m is set in \033[1m$conf\033[m\n";
    exit 1;
}

my ($channel, @message) = @ARGV;
my $message = join(' ', @message);
my @messages;
if (! $message) {
    @messages = map {chomp; $_} <STDIN>;
}

my $irc = new Net::IRC;
my $conn = $irc->newconn(
    Server => $SERVER,
    Port => $PORT,
    SSL => $USE_SSL,
    Password => $PASS,
    Nick => $NICK
    ); 	
sub on_connect {
    my $self = shift;

    $self->join($channel, $chpass);
    if (@messages) {
	foreach (@messages) {
	    $privmsg ? $self->privmsg($channel, $_)
		: $action ? $self->me($channel, $_)
		: $self->notice($channel, $_);
	    sleep(1); # avoid flood
	}
    } else {
	$privmsg ? $self->privmsg($channel, $message)
	    : $action ? $self->me($channel, $message)
	    : $self->notice($channel, $message);
    }
    exit;
}
$conn->add_handler('endofmotd', \&on_connect);
$irc->start;
